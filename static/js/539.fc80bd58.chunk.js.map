{"version":3,"file":"static/js/539.fc80bd58.chunk.js","mappings":"uJACA,SAAgB,SAAW,iCAAiC,aAAe,qCAAqC,mBAAqB,2CAA2C,gBAAkB,yC,uBCqClM,QAjCA,SAAuBA,GAAY,IAAX,KAAEC,GAAMD,EAC9B,MAAOE,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,IAc/B,OAZAC,EAAAA,EAAAA,YAAU,KAER,MACMC,EADM,IAAIC,IAAIN,GACCO,aAAaC,IAAI,OAEtC,GAAIH,EAAU,CAEZ,MAAMI,GAAmBC,EAAAA,EAAAA,GAAeL,GACxCH,EAAOO,EACT,IACC,CAACT,KAGFW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOC,iBAAiBJ,SAAC,qBACxCC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAOE,aAAaL,SAAC,2GAInCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOG,mBAAmBN,UACxCC,EAAAA,EAAAA,KAAA,YACEC,UAAWC,EAAOI,gBAClBC,MAAOpB,EACPqB,UAAQ,QAKlB,C","sources":["webpack://my-react-app/./src/components/DecompressText.module.css?fdfb","components/DecompressText.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GameArea\":\"DecompressText_GameArea__nhaL7\",\"instructions\":\"DecompressText_instructions__t1ZWh\",\"textInputContainer\":\"DecompressText_textInputContainer__aMdJK\",\"interactiveText\":\"DecompressText_interactiveText__GKm80\"};","import React, { useState, useEffect } from \"react\";\nimport styles from \"./DecompressText.module.css\";\n// Ensure decompressText is correctly imported\nimport { decompressText } from \"./TextInput\";\n\nfunction DecompressText({ text }) {\n  const [txt, setTxt] = useState(\"\");\n\n  useEffect(() => {\n    // Extract 'txt' query parameter from the URL\n    const url = new URL(text);\n    const txtParam = url.searchParams.get(\"txt\");\n\n    if (txtParam) {\n      // Decompress the extracted text\n      const decompressedText = decompressText(txtParam);\n      setTxt(decompressedText);\n    }\n  }, [text]); // Re-run this effect if the 'text' prop changes\n\n  return (\n    <>\n      <h1 className={styles.interactiveTitle}>Decompress Text</h1>\n      <p className={styles.instructions}>\n        Here is the text you entered ready to paste back into your choice of\n        interactive for further editing.\n      </p>\n      <div className={styles.textInputContainer}>\n        <textarea\n          className={styles.interactiveText}\n          value={txt}\n          readOnly\n        ></textarea>\n      </div>\n    </>\n  );\n}\n\nexport default DecompressText;\n"],"names":["_ref","text","txt","setTxt","useState","useEffect","txtParam","URL","searchParams","get","decompressedText","decompressText","_jsxs","_Fragment","children","_jsx","className","styles","interactiveTitle","instructions","textInputContainer","interactiveText","value","readOnly"],"sourceRoot":""}