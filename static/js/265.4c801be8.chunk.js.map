{"version":3,"file":"static/js/265.4c801be8.chunk.js","mappings":"uJACA,QAAqC,sCAArC,EAAwF,8BAAxF,EAA8H,yBAA9H,EAA0K,oCAA1K,EAA2N,8BAA3N,EAAuQ,+B,aCqFvQ,QAnFA,SAAkBA,GAAY,IAAX,KAAEC,GAAMD,EACzB,MAAME,EAASD,EAAKE,MAAM,MAAMC,QAAQC,GAAUA,KAC3CC,EAAWC,IAAgBC,EAAAA,EAAAA,UAASN,EAAOO,KAAI,IAAM,MACrDC,EAAWC,IAAgBH,EAAAA,EAAAA,WAAS,GACrCI,GAAYC,EAAAA,EAAAA,QAAO,MAEnBC,EAAeC,IACnB,MAAMC,EAAe,IAAIV,GACzBU,EAAaD,IAAU,EACvBR,EAAaS,GACTA,EAAaC,MAAMC,GAAaA,GAAY,MAE9CP,GAAa,EACf,EA4BF,OApBAQ,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAASR,EAAUS,QACnBC,EAAMF,EAAOG,WAAW,MAC9BD,EAAIE,UAAU,EAAG,EAAGJ,EAAOK,MAAOL,EAAOM,QACzCJ,EAAIK,YAAc,MAClBL,EAAIM,UAAY,EAGhBN,EAAIO,YACJP,EAAIQ,OAAO,GAAI,GACfR,EAAIS,OAAO,GAAIX,EAAOM,QACtBJ,EAAIU,SAGJV,EAAIO,YACJP,EAAIQ,OAAsB,GAAfV,EAAOK,MAAa,GAC/BH,EAAIS,OAAsB,GAAfX,EAAOK,MAAaL,EAAOM,QACtCJ,EAAIU,QAAQ,GACX,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBH,SAC/BjC,EAAOO,KAAI,CAACJ,EAAOU,KAClBqB,EAAAA,EAAAA,KAAA,QAEEG,MAAO,CACLC,MAAM,OAADC,OAAU,IAAMvC,EAAOwC,OAAU3B,EAAK,iBAC3CoB,SAED9B,GALIU,QASXkB,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAA0BH,SAAA,CACvCzB,IAAa0B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBH,SAAC,kBAElDC,EAAAA,EAAAA,KAAA,UAAQO,IAAK/B,EAAWyB,UAAWC,IAClCpC,EAAOO,KAAI,CAACJ,EAAOU,KAClBqB,EAAAA,EAAAA,KAAA,OAEEC,UAAWC,EACXC,MAAO,CACLK,IAAI,GAADH,OAAM,GAAKvC,EAAOwC,OAAU3B,EAAK,KACpC8B,KAAK,GAADJ,OAAwB,EAAnBnC,EAAUS,GAAU,KAC7B+B,aAAa,iBAADL,OACT,IAAMvC,EAAOwC,OAAU3B,EAAK,iBAGjCgC,QAASA,IAAMjC,EAAYC,GAAOoB,SACnC,gBAVMpB,MAcTqB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAyBS,QA3DzBC,KACvB,MAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWlD,EAAOwC,QACtD5B,EAAYmC,EAAY,EAyDkDd,SAAC,qBAM/E,C","sources":["webpack://my-react-app/./src/components/HorseRace.module.css?152c","components/HorseRace.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"horseRaceContainer\":\"HorseRace_horseRaceContainer__Hx1jT\",\"horseNames\":\"HorseRace_horseNames__DRGGJ\",\"horse\":\"HorseRace_horse__2dS-A\",\"randomMoveButton\":\"HorseRace_randomMoveButton__pr0WZ\",\"raceCanvas\":\"HorseRace_raceCanvas__MmFea\",\"celebration\":\"HorseRace_celebration__DT2oP\",\"moveUpDown\":\"HorseRace_moveUpDown__lsaoN\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./HorseRace.module.css\";\n\nfunction HorseRace({ text }) {\n  const horses = text.split(\"\\n\").filter((horse) => horse);\n  const [positions, setPositions] = useState(horses.map(() => 0));\n  const [celebrate, setCelebrate] = useState(false);\n  const canvasRef = useRef(null);\n\n  const handleClick = (index) => {\n    const newPositions = [...positions];\n    newPositions[index] += 1;\n    setPositions(newPositions);\n    if (newPositions.some((position) => position >= 10)) {\n      // Celebration logic goes here (similar to MatchDragDrop)\n      setCelebrate(true); // Placeholder for now\n    }\n  };\n\n  const handleRandomMove = () => {\n    const randomHorse = Math.floor(Math.random() * horses.length);\n    handleClick(randomHorse);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 1;\n\n    // Draw start line\n    ctx.beginPath();\n    ctx.moveTo(10, 0);\n    ctx.lineTo(10, canvas.height);\n    ctx.stroke();\n\n    // Draw finish line\n    ctx.beginPath();\n    ctx.moveTo(canvas.width * 0.8, 0); // 80% of the canvas width\n    ctx.lineTo(canvas.width * 0.8, canvas.height);\n    ctx.stroke();\n  }, []);\n\n  return (\n    <>\n      <div className={styles.horseNames}>\n        {horses.map((horse, index) => (\n          <span\n            key={index}\n            style={{\n              color: `hsl(${(360 / horses.length) * index}, 100%, 50%)`,\n            }}\n          >\n            {horse}\n          </span>\n        ))}\n      </div>\n      <div className={styles.horseRaceContainer}>\n        {celebrate && <div className={styles.celebration}>üéâ</div>}\n\n        <canvas ref={canvasRef} className={styles.raceCanvas}></canvas>\n        {horses.map((horse, index) => (\n          <div\n            key={index}\n            className={styles.horse}\n            style={{\n              top: `${(95 / horses.length) * index}%`,\n              left: `${positions[index] * 8}%`,\n              borderBottom: `5px solid hsl(${\n                (360 / horses.length) * index\n              }, 100%, 50%)`,\n            }}\n            onClick={() => handleClick(index)}\n          >\n            üêé\n          </div>\n        ))}\n        <button className={styles.randomMoveButton} onClick={handleRandomMove}>\n          Random Move\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default HorseRace;\n"],"names":["_ref","text","horses","split","filter","horse","positions","setPositions","useState","map","celebrate","setCelebrate","canvasRef","useRef","handleClick","index","newPositions","some","position","useEffect","canvas","current","ctx","getContext","clearRect","width","height","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","_jsxs","_Fragment","children","_jsx","className","styles","style","color","concat","length","ref","top","left","borderBottom","onClick","handleRandomMove","randomHorse","Math","floor","random"],"sourceRoot":""}