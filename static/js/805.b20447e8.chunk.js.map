{"version":3,"file":"static/js/805.b20447e8.chunk.js","mappings":"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","sources":["webpack://class-interactives/./src/components/LeftOrRight.module.css?58f2","components/LeftOrRight.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"lorContainer\":\"LeftOrRight_lorContainer__70yG+\",\"lorPair\":\"LeftOrRight_lorPair__QaAOm\",\"lorBox\":\"LeftOrRight_lorBox__ypfQZ\",\"selected\":\"LeftOrRight_selected__osUj2\",\"lorResult\":\"LeftOrRight_lorResult__-KZTo\",\"SubmitButton\":\"LeftOrRight_SubmitButton__CY4cG\",\"celebration\":\"LeftOrRight_celebration__CQB70\",\"scale\":\"LeftOrRight_scale__V0mKH\",\"hide\":\"LeftOrRight_hide__lBwoe\",\"score\":\"LeftOrRight_score__pVH81\"};","import React, { useState } from \"react\";\nimport { InlineMath } from \"react-katex\";\nimport styles from \"./LeftOrRight.module.css\";\n\nfunction parseInput(text) {\n  const pairs = text.split(\"\\n\\n\");\n  return pairs.map((pair) => {\n    const parts = pair.split(\"\\n---\\n\");\n    const left = parts[0] ? parts[0].replace(\"*\", \"\") : \"\";\n    const right = parts[1] ? parts[1].replace(\"*\", \"\") : \"\";\n    return {\n      left: { text: left, correct: parts[0] && parts[0].startsWith(\"*\") },\n      right: { text: right, correct: parts[1] && parts[1].startsWith(\"*\") },\n    };\n  });\n}\n\nfunction LeftOrRight({ text }) {\n  const pairs = parseInput(text);\n  const [selections, setSelections] = useState(Array(pairs.length).fill(null));\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showCelebration, setShowCelebration] = useState(false);\n\n  if (!text || typeof text !== \"string\") {\n    return <div>Error: Invalid input provided.</div>;\n  }\n\n  const handleBoxClick = (pairIndex, side) => {\n    if (isSubmitted) return;\n    const newSelections = [...selections];\n    newSelections[pairIndex] = side;\n    setSelections(newSelections);\n  };\n\n  const handleSubmit = () => {\n    setIsSubmitted(true);\n    if (getScore() === pairs.length) {\n      setShowCelebration(true);\n    }\n  };\n\n  const getScore = () => {\n    return pairs.reduce((score, pair, index) => {\n      const selectedSide = selections[index];\n      if (selectedSide && pair[selectedSide].correct) {\n        score += 1;\n      }\n      return score;\n    }, 0);\n  };\n\n  return (\n    <>\n      {showCelebration && (\n        <div className={styles.celebration}>\n          <span>üèÜ</span>\n        </div>\n      )}\n      <div className={`interactiveContainer ${styles.lorContainer}`}>\n        {pairs.map((pair, index) => (\n          <div key={index} className={styles.lorPair}>\n            <div\n              className={[\n                styles.lorBox,\n                selections[index] === \"left\" && styles.selected,\n              ]\n                .filter(Boolean)\n                .join(\" \")}\n              onClick={() => handleBoxClick(index, \"left\")}\n            >\n              {<MathComponent text={pair.left.text} />}\n            </div>\n            <div className={styles.lorResult}>\n              {isSubmitted &&\n                selections[index] &&\n                (pair[selections[index]].correct ? \"‚úÖ\" : \"‚ùå\")}\n            </div>\n            <div\n              className={[\n                styles.lorBox,\n                selections[index] === \"right\" && styles.selected,\n              ]\n                .filter(Boolean)\n                .join(\" \")}\n              onClick={() => handleBoxClick(index, \"right\")}\n            >\n              {<MathComponent text={pair.right.text} />}\n            </div>\n          </div>\n        ))}\n        {pairs.some((pair) => pair.left.correct || pair.right.correct) && (\n          <button onClick={handleSubmit} className={styles.SubmitButton}>\n            Submit\n          </button>\n        )}\n        {isSubmitted && (\n          <div className={styles.score}>You scored {getScore()}</div>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction parseAndRenderMath(text) {\n  // Split the text based on $$ delimiters\n  const segments = text.split(\"$$\");\n  const elements = [];\n\n  segments.forEach((segment, index) => {\n    if (index % 2 === 1) {\n      // Odd-indexed segments are LaTeX (since they are enclosed between $$ delimiters)\n      elements.push(<InlineMath math={segment} />);\n    } else {\n      elements.push(<span>{segment}</span>);\n    }\n  });\n\n  return elements;\n}\n\nfunction MathComponent({ text }) {\n  return <>{parseAndRenderMath(text)}</>;\n}\n\nexport default LeftOrRight;\n"],"names":["parseAndRenderMath","text","segments","split","elements","forEach","segment","index","push","_jsx","InlineMath","math","children","MathComponent","_ref2","_Fragment","_ref","pairs","map","pair","parts","left","replace","right","correct","startsWith","parseInput","selections","setSelections","useState","Array","length","fill","isSubmitted","setIsSubmitted","showCelebration","setShowCelebration","handleBoxClick","pairIndex","side","newSelections","getScore","reduce","score","selectedSide","_jsxs","className","styles","celebration","concat","lorContainer","lorPair","lorBox","selected","filter","Boolean","join","onClick","lorResult","some","handleSubmit","SubmitButton"],"sourceRoot":""}