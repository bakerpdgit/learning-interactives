{"version":3,"file":"static/js/453.b44bca28.chunk.js","mappings":"iKACA,QAAmC,mCAAnC,EAAiF,2B,aCyEjF,QAtEA,WACE,MAAOA,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAC3BC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAiBXC,EAAqBC,IACzB,MACMC,EADQD,EAAYE,MAAM,MACVC,MACnBC,GAASA,EAAKC,SAAS,cAAgBD,EAAKC,SAAS,uBAExD,GAAIJ,EAAS,CACX,MACMK,EADM,IAAIC,IAAIN,GACDO,aAEbC,EAAWH,EAAOI,IAAI,OACtBC,EAAUL,EAAOI,IAAI,MAE3B,GAAID,EAAU,CACZ,MAAMH,EAAS,IAAIM,gBAAgB,CACjCC,GAAIF,EACJG,QAASL,IAEXd,EAAQoB,QAAQ,CACdC,SAAUnB,EAASmB,SACnBC,OAAQX,EAAOY,YAEnB,CACF,MACEC,QAAQC,MAAM,kCAChB,EAGF,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBF,SAAC,8BACjCC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcF,SAAC,kDAG5BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,SAnDkBC,IACxBnC,EAAQmC,EAAMC,OAAOC,MAAM,GAAG,EAmDxBC,MAAO,CAAEC,QAAS,QAClBnB,GAAG,gBAELW,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,aAAaR,UAAWS,EAAwBX,SAAC,gBAG/D/B,IAAQgC,EAAAA,EAAAA,KAAA,OAAKC,UAAWS,EAAgBX,SAAE/B,EAAK2C,OAC/C3C,IAAQgC,EAAAA,EAAAA,KAAA,UAAQY,QAvDEC,KACvB,GAAI7C,EAAM,CACR,MAAM8C,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAUZ,GACxB,MAAM5B,EAAc4B,EAAMC,OAAOY,OACjC1C,EAAkBC,EACpB,EACAsC,EAAOI,WAAWlD,EACpB,GA+C+C+B,SAAC,yBAIpD,C","sources":["webpack://my-react-app/./src/components/Uploader.module.css?1701","components/Uploader.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customFileUpload\":\"Uploader_customFileUpload__LKWMb\",\"fileName\":\"Uploader_fileName__vNWWI\"};","import React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport styles from \"./Uploader.module.css\";\n\nfunction Uploader() {\n  const [file, setFile] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleFileUpload = () => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        const fileContent = event.target.result;\n        extractAndLogInfo(fileContent);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const extractAndLogInfo = (fileContent) => {\n    const lines = fileContent.split(\"\\n\");\n    const urlLine = lines.find(\n      (line) => line.includes(\"localhost\") || line.includes(\"classinteractives\")\n    );\n    if (urlLine) {\n      const url = new URL(urlLine);\n      const params = url.searchParams;\n      // Retrieve the value of 'txt' parameter\n      const txtValue = params.get(\"txt\");\n      const idValue = params.get(\"id\");\n\n      if (txtValue) {\n        const params = new URLSearchParams({\n          id: idValue,\n          txtedit: txtValue,\n        });\n        history.replace({\n          pathname: location.pathname,\n          search: params.toString(),\n        });\n      }\n    } else {\n      console.error(\"No valid URL found in the file.\");\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"interactiveTitle\">Upload Saved Interactive</h1>\n      <p className=\"instructions\">\n        Browse to the saved interactive .txt file...\n      </p>\n      <div className=\"interactiveContainer\">\n        <input\n          type=\"file\"\n          onChange={handleFileChange}\n          style={{ display: \"none\" }} // Hide the input\n          id=\"fileUpload\" // Add an id for referencing\n        />\n        <label htmlFor=\"fileUpload\" className={styles.customFileUpload}>\n          Choose File\n        </label>\n        {file && <div className={styles.fileName}>{file.name}</div>}\n        {file && <button onClick={handleFileUpload}>Upload and edit</button>}\n      </div>\n    </>\n  );\n}\n\nexport default Uploader;\n"],"names":["file","setFile","useState","history","useHistory","location","useLocation","extractAndLogInfo","fileContent","urlLine","split","find","line","includes","params","URL","searchParams","txtValue","get","idValue","URLSearchParams","id","txtedit","replace","pathname","search","toString","console","error","_jsxs","_Fragment","children","_jsx","className","type","onChange","event","target","files","style","display","htmlFor","styles","name","onClick","handleFileUpload","reader","FileReader","onload","result","readAsText"],"sourceRoot":""}