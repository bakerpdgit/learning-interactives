{"version":3,"file":"static/js/262.26256eff.chunk.js","mappings":"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","sources":["components/ImagePins.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./ImagePins.css\"; // Make sure to create corresponding CSS\n\nfunction ImagePins({ text }) {\n  const [pins, setPins] = useState([]);\n  const [showInstruction, setShowInstruction] = useState(true);\n  const [draggedLabelIndex, setDraggedLabelIndex] = useState(null);\n\n  const imgRef = useRef(null);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowInstruction(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const placePin = (e) => {\n    if (!imgRef.current) return;\n\n    const rect = imgRef.current.getBoundingClientRect();\n    let x = e.clientX - rect.left;\n    let y = e.clientY - rect.top;\n\n    // Add new pin to the array\n    setPins((prevPins) => [\n      ...prevPins,\n      {\n        x: Math.max(0, Math.min(x, rect.width - 20)),\n        y: Math.max(0, Math.min(y, rect.height - 20)),\n        label: \"\",\n        labelX: x, // Initial Label X (same as pin X initially)\n        labelY: y - 40, // Initial Label Y (slightly above pin Y)\n      },\n    ]);\n  };\n\n  const handleRightClick = (e, index) => {\n    e.preventDefault(); // Prevent the browser context menu from opening\n    setPins((prevPins) => prevPins.filter((_, i) => i !== index)); // Remove the pin at the clicked index\n  };\n\n  const handleDoubleClick = (index) => {\n    const label = prompt(\"Enter a label for this pin:\", pins[index].label);\n    if (label !== null) {\n      // Check if the user didn't press Cancel\n      setPins(pins.map((pin, i) => (i === index ? { ...pin, label } : pin)));\n    }\n  };\n\n  // Adjusted onDragStart to prevent default behavior\n  const onDragStart = (e, index) => {\n    e.dataTransfer.setData(\"text/plain\", \"\"); // For Firefox compatibility\n    setDraggedLabelIndex(index);\n  };\n\n  // Moved onDragOver to the image-pin-container\n  const onDragOver = (e) => {\n    e.preventDefault(); // This is crucial for allowing the drop\n  };\n\n  const onDrop = (e) => {\n    if (!imgRef.current || draggedLabelIndex === null) return;\n\n    const rect = imgRef.current.getBoundingClientRect();\n    let labelX = e.clientX - rect.left;\n    let labelY = e.clientY - rect.top;\n\n    // Update only the label's position\n    setPins(\n      pins.map((pin, i) =>\n        i === draggedLabelIndex\n          ? { ...pin, labelX: labelX, labelY: labelY }\n          : pin\n      )\n    );\n\n    setDraggedLabelIndex(null); // Reset after drop\n  };\n\n  return (\n    <div className=\"image-pin-maincontainer\">\n      <div\n        className=\"image-pin-container\"\n        draggable=\"false\" // Prevent the container from being draggable\n        onDragOver={onDragOver}\n        onDrop={onDrop}\n      >\n        <img\n          ref={imgRef}\n          src={text}\n          className=\"image-pin-image\"\n          alt=\"Highlight\"\n          onClick={placePin}\n          draggable=\"false\"\n        />\n\n        {pins.map((pin, index) => (\n          <React.Fragment key={`pinlabel-${index}`}>\n            <div\n              key={`pin-${index}`}\n              className=\"pin\"\n              style={{ left: `${pin.x - 10}px`, top: `${pin.y - 10}px` }}\n              onContextMenu={(e) => handleRightClick(e, index)}\n              onDoubleClick={() => handleDoubleClick(index)}\n            ></div>\n            {pin.label && (\n              <div\n                className=\"pin-label\"\n                style={{ left: `${pin.labelX}px`, top: `${pin.labelY}px` }} // Use labelX and labelY for positioning\n                draggable=\"true\"\n                onDragStart={(e) => onDragStart(e, index)}\n              >\n                {pin.label}\n              </div>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n      {showInstruction && (\n        <div className=\"image-pin-instruction\">\n          <h1>Image Pins</h1>\n          <p>\n            click to drop pins, right-click to delete pin, double-click to add a\n            label; drag labels to reposition.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ImagePins;\n"],"names":["_ref","text","pins","setPins","useState","showInstruction","setShowInstruction","draggedLabelIndex","setDraggedLabelIndex","imgRef","useRef","useEffect","timer","setTimeout","clearTimeout","_jsxs","className","children","draggable","onDragOver","e","preventDefault","onDrop","current","rect","getBoundingClientRect","labelX","clientX","left","labelY","clientY","top","map","pin","i","_jsx","ref","src","alt","onClick","x","y","prevPins","Math","max","min","width","height","label","index","React","style","concat","onContextMenu","handleRightClick","filter","_","onDoubleClick","prompt","handleDoubleClick","onDragStart","dataTransfer","setData"],"sourceRoot":""}