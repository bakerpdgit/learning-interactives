{"version":3,"file":"static/js/852.e6e215d3.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/TimeRecorder.module.css?30c9","components/TimeRecorder.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"timer\":\"TimeRecorder_timer__ZPnoz\",\"button\":\"TimeRecorder_button__ATNIX\",\"controls\":\"TimeRecorder_controls__KXaWb\",\"categories\":\"TimeRecorder_categories__DlZgo\",\"category\":\"TimeRecorder_category__GO6T5\",\"categoryButton\":\"TimeRecorder_categoryButton__HGinF\",\"selected\":\"TimeRecorder_selected__YMAZG\",\"categoryTime\":\"TimeRecorder_categoryTime__g9v87\",\"GameArea\":\"TimeRecorder_GameArea__yTGZI\"};","import React, { useState, useEffect } from \"react\";\nimport styles from \"./TimeRecorder.module.css\";\n\nconst Timer = ({ time }) => {\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  return (\n    <div className={styles.timer}>\n      {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n    </div>\n  );\n};\n\nconst Button = ({ onClick, label, disabled }) => (\n  <button onClick={onClick} className={styles.button} disabled={disabled}>\n    {label}\n  </button>\n);\n\nconst Category = ({ name, time, isSelected, onClick }) => {\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  return (\n    <div className={styles.category}>\n      <div\n        className={`${styles.categoryButton} ${\n          isSelected ? styles.selected : \"\"\n        }`}\n        onClick={() => onClick(name)}\n      >\n        {name}\n      </div>\n      <div className={styles.categoryTime}>\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      </div>\n    </div>\n  );\n};\n\nconst TimeRecorderComponent = ({ initialTime = 0, categories = [] }) => {\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const [pausedTime, setPausedTime] = useState(0);\n  const [lastUpdateTime, setLastUpdateTime] = useState(null);\n  const [currentCategory, setCurrentCategory] = useState(\"OTHER\");\n  const [categoryTimes, setCategoryTimes] = useState(\n    categories.reduce(\n      (acc, category) => {\n        acc[category] = 0;\n        return acc;\n      },\n      { OTHER: 0 }\n    )\n  );\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    let timer;\n\n    if (isRunning && !isPaused) {\n      timer = setInterval(() => {\n        const now = new Date().getTime();\n        const elapsedTime = Math.floor((now - lastUpdateTime) / 1000);\n        const totalElapsed = Math.floor((now - startTime - pausedTime) / 1000);\n\n        const newTime =\n          initialTime > 0\n            ? Math.max(initialTime - totalElapsed, 0)\n            : totalElapsed;\n\n        setTime(newTime);\n\n        setCategoryTimes((prevCategoryTimes) => {\n          const newCategoryTimes = { ...prevCategoryTimes };\n          newCategoryTimes[currentCategory] += elapsedTime;\n          return newCategoryTimes;\n        });\n\n        setLastUpdateTime(now);\n\n        if (newTime === 0 && initialTime > 0) {\n          clearInterval(timer);\n          setIsRunning(false);\n          setIsPaused(false);\n          setIsDisabled(true);\n        }\n      }, 1000);\n    }\n\n    return () => clearInterval(timer);\n  }, [\n    isRunning,\n    isPaused,\n    startTime,\n    pausedTime,\n    initialTime,\n    lastUpdateTime,\n    currentCategory,\n  ]);\n\n  const handleStartPause = () => {\n    const now = new Date().getTime();\n    setLastUpdateTime(now);\n\n    if (!isRunning) {\n      setIsRunning(true);\n      setIsPaused(false);\n      setStartTime(now);\n    } else if (isPaused) {\n      setIsPaused(false);\n      setPausedTime(pausedTime + (now - lastUpdateTime));\n    } else {\n      setIsPaused(true);\n      setPausedTime(pausedTime + (now - lastUpdateTime));\n    }\n  };\n\n  const handleEnd = () => {\n    setIsRunning(false);\n    setIsPaused(false);\n    setIsDisabled(true);\n  };\n\n  const handleCategoryClick = (name) => {\n    setCurrentCategory(name);\n  };\n\n  return (\n    <div className={styles.timeRecorder}>\n      <Timer time={time} />\n      <div className={styles.controls}>\n        <Button\n          onClick={handleStartPause}\n          label={isPaused || !isRunning ? \"START\" : \"PAUSE\"}\n          disabled={isDisabled}\n        />\n        <Button onClick={handleEnd} label=\"END\" disabled={isDisabled} />\n      </div>\n      <div className={styles.categories}>\n        {[\"OTHER\", ...categories].map((category) => (\n          <Category\n            key={category}\n            name={category}\n            time={categoryTimes[category]}\n            isSelected={currentCategory === category}\n            onClick={handleCategoryClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction TimeRecorder({ text }) {\n  const lines = text.split(\"\\n\");\n  const timeOption = lines[0].startsWith(\"OPTIONS:time=\")\n    ? parseInt(lines[0].split(\"=\")[1], 10)\n    : 0;\n  const categories = lines.slice(timeOption ? 1 : 0);\n\n  return (\n    <>\n      <div className={styles.GameArea}>\n        <TimeRecorderComponent\n          initialTime={timeOption}\n          categories={categories}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default TimeRecorder;\n"],"names":["Timer","_ref","time","minutes","Math","floor","seconds","_jsxs","className","styles","timer","children","concat","Button","_ref2","onClick","label","disabled","_jsx","button","Category","_ref3","name","isSelected","category","categoryButton","selected","categoryTime","TimeRecorderComponent","_ref4","initialTime","categories","setTime","useState","isRunning","setIsRunning","isPaused","setIsPaused","startTime","setStartTime","pausedTime","setPausedTime","lastUpdateTime","setLastUpdateTime","currentCategory","setCurrentCategory","categoryTimes","setCategoryTimes","reduce","acc","OTHER","isDisabled","setIsDisabled","useEffect","setInterval","now","Date","getTime","elapsedTime","totalElapsed","newTime","max","prevCategoryTimes","newCategoryTimes","clearInterval","handleCategoryClick","timeRecorder","controls","handleStartPause","handleEnd","map","_ref5","text","lines","split","timeOption","startsWith","parseInt","slice","_Fragment","GameArea"],"sourceRoot":""}