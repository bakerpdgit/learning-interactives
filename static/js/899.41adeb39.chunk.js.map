{"version":3,"file":"static/js/899.41adeb39.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/PrizePot.module.css?4033","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","components/PrizePot.js","../node_modules/fast-deep-equal/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GameArea\":\"PrizePot_GameArea__+JVoK\",\"prizeFund\":\"PrizePot_prizeFund__y+M23\",\"coinBagAllocation\":\"PrizePot_coinBagAllocation__88lJl\",\"interactiveTitle\":\"PrizePot_interactiveTitle__wNDBC\",\"instructions\":\"PrizePot_instructions__Xr5H5\",\"question\":\"PrizePot_question__LV5BQ\",\"prizePot\":\"PrizePot_prizePot__S0wyB\",\"prizePotChange\":\"PrizePot_prizePotChange__pPsvI\",\"answers\":\"PrizePot_answers__pdBvp\",\"buttonWrapper\":\"PrizePot_buttonWrapper__obm-4\",\"answerOption\":\"PrizePot_answerOption__StOUQ\",\"dragOver\":\"PrizePot_dragOver__ZOyVc\",\"moneyBag\":\"PrizePot_moneyBag__By8Lq\",\"celebration\":\"PrizePot_celebration__c7jhq\",\"scale\":\"PrizePot_scale__x-ay9\",\"hide\":\"PrizePot_hide__3+RpL\"};","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./PrizePot.module.css\";\nimport { useDrag } from \"react-dnd\";\nimport { useDrop } from \"react-dnd\";\n\nconst ItemTypes = {\n  COIN_BAG: \"coinBag\",\n};\n\nconst INITIAL_PRIZE_POT = 128;\n\nconst DraggableCoinBag = ({ id }) => {\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.COIN_BAG,\n    item: { id },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  return (\n    <div\n      ref={drag}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        fontSize: \"3em\",\n        cursor: \"move\",\n      }}\n    >\n      💰\n    </div>\n  );\n};\n\nconst DroppableAnswerOption = ({\n  index,\n  onDropCoinBag,\n  children,\n  allocations,\n}) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: ItemTypes.COIN_BAG,\n    drop: (item, monitor) => onDropCoinBag(index, item.id),\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      style={{\n        border: isOver ? \"2px solid green\" : \"1px solid gray\",\n        borderRadius: \"20px\",\n        padding: \"10px\",\n        margin: \"5px\",\n        textAlign: \"center\",\n        fontSize: \"1em\",\n      }}\n    >\n      {children}\n      <div className={styles.coinBagAllocation}>\n        {allocations.map(\n          (allocation, id) =>\n            allocation === index && <DraggableCoinBag key={id} id={id} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst DroppablePrizeFund = ({ onReturnCoinBag, children, allocations }) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: ItemTypes.COIN_BAG,\n    drop: (item, monitor) => onReturnCoinBag(item.id),\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      style={{\n        // Apply your styles here\n        border: isOver ? \"2px dashed green\" : \"1px dashed grey\",\n        padding: \"10px\",\n        borderRadius: \"10px\",\n        textAlign: \"center\",\n        minHeight: \"100px\", // Ensure there's enough space to drop\n      }}\n    >\n      {children}\n      {/* Render unallocated coin bags */}\n      <div className={styles.prizeFund}>\n        {allocations.map(\n          (allocation, id) =>\n            allocation === -1 && <DraggableCoinBag key={id} id={id} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction PrizePot({ text }) {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [prizePot, setPrizePot] = useState(INITIAL_PRIZE_POT);\n  const currentQuestion = questions[currentQuestionIndex];\n  const [celebrate, setCelebrate] = useState(false);\n  const [coinBagsAllocation, setCoinBagsAllocation] = useState({\n    bags: [-1, -1, -1, -1], // Assuming -1 indicates not allocated\n  });\n\n  // Handle returning a coin bag to the prize fund\n  const handleReturnCoinBag = (coinBagId) => {\n    setCoinBagsAllocation((prev) => {\n      const newAllocations = { ...prev };\n      newAllocations.bags[coinBagId] = -1; // Reset allocation for this coin bag\n      return newAllocations;\n    });\n  };\n\n  useEffect(() => {\n    const parsedQuestions = text.split(\"\\n\\n\").map((q) => {\n      const lines = q.split(\"\\n\");\n      return {\n        question: lines[0],\n        answers: lines.slice(1).map((answer) => ({\n          text: answer.replace(\"*\", \"\"),\n          isCorrect: answer.includes(\"*\"),\n        })),\n      };\n    });\n    setQuestions(parsedQuestions);\n  }, [text]);\n\n  const restartGame = () => {\n    // Reset the game state as needed\n    setPrizePot(INITIAL_PRIZE_POT); // Assuming 128 is the starting amount\n    setCurrentQuestionIndex(0);\n    setCoinBagsAllocation({ bags: [-1, -1, -1, -1] });\n    setCelebrate(false);\n    // Also, ensure to reset any other relevant state to initial conditions\n  };\n\n  const handleSelectOption = (index) => {\n    // Update all bag allocations to the selected answer index\n    setCoinBagsAllocation((prev) => ({\n      ...prev,\n      bags: prev.bags.map(() => index),\n    }));\n  };\n\n  const handleSubmit = () => {\n    // Identify the index of the correct answer\n    const correctAnswerIndex = currentQuestion.answers.findIndex(\n      (answer) => answer.isCorrect\n    );\n\n    // Calculate the prize pot update based on the bets\n    const betPerBag = prizePot / 4; // Each bag represents a quarter of the current prize pot\n    const bagsOnCorrectAnswer = coinBagsAllocation.bags.filter(\n      (allocation) => allocation === correctAnswerIndex\n    ).length;\n    const winnings = bagsOnCorrectAnswer * betPerBag * 4; // Winnings from bets placed on the correct answer\n    // Calculate the total amount lost from bets on incorrect answers\n    const totalLostFromIncorrectBets =\n      coinBagsAllocation.bags.filter(\n        (allocation) => allocation !== correctAnswerIndex && allocation !== -1\n      ).length * betPerBag;\n    // Update the prize pot: add winnings and subtract the stake from incorrect bets\n    // After calculating the new prize pot value\n    const newPrizePot = Math.ceil(\n      prizePot - totalLostFromIncorrectBets + winnings\n    );\n\n    setPrizePot(newPrizePot);\n\n    // Prepare for the next question or end the quiz\n    if (currentQuestionIndex + 1 < questions.length && newPrizePot > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCoinBagsAllocation({ bags: [-1, -1, -1, -1] }); // Reset coin bag allocations for the next question\n    } else {\n      setCelebrate(true);\n    }\n  };\n\n  // Handle dropping a coin bag onto an answer option\n  const handleDropCoinBag = (answerIndex, coinBagId) => {\n    // Update allocation state\n    setCoinBagsAllocation((prev) => {\n      const newAllocations = { ...prev };\n      newAllocations.bags[coinBagId] = answerIndex;\n      return newAllocations;\n    });\n  };\n\n  // also removed this style ${selectedOption === index ? styles.selected : \"\"} from the options because not selecting\n  return (\n    <>\n      <h1 className={styles.interactiveTitle}>Prize Pot Quiz</h1>\n      <p className={styles.instructions}>\n        Drag at least some of your prize pot to the options, spreading it\n        depending on how sure you are! Click an option to transfer all to this\n        answer.\n      </p>\n      <div className={styles.prizePot}>Current Fund: ${prizePot}</div>\n      {!celebrate ? (\n        currentQuestion && (\n          <>\n            <DroppablePrizeFund\n              onReturnCoinBag={handleReturnCoinBag}\n              allocations={coinBagsAllocation.bags}\n            >\n              <div className={styles.prizeFundTitle}>Prize Fund</div>\n            </DroppablePrizeFund>\n            <div className={styles.buttonWrapper}>\n              <button\n                className={styles.submitButton}\n                disabled={coinBagsAllocation.bags.every(\n                  (allocation) => allocation === -1\n                )} // Disable if no bets have been placed\n                onClick={handleSubmit}\n              >\n                Submit Final Answer\n              </button>\n            </div>\n            <p className={styles.question}>{currentQuestion.question}</p>\n            <div className={styles.gameArea}>\n              {currentQuestion && (\n                <>\n                  <div className={styles.answers}>\n                    {currentQuestion.answers.map((answer, index) => (\n                      <DroppableAnswerOption\n                        key={index}\n                        index={index}\n                        onDropCoinBag={handleDropCoinBag}\n                        allocations={coinBagsAllocation.bags}\n                      >\n                        <div\n                          className={`${styles.answerOption}`}\n                          onClick={() => handleSelectOption(index)}\n                        >\n                          {answer.text}\n                        </div>\n                      </DroppableAnswerOption>\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n          </>\n        )\n      ) : (\n        <>\n          <div className={styles.celebration}>\n            {prizePot > 0 ? (\n              <>\n                <span>🎉</span>\n              </>\n            ) : (\n              <>\n                <span>😢</span>\n              </>\n            )}\n          </div>\n          <div className={styles.buttonWrapper}>\n            <button style={styles.restartButton} onClick={restartGame}>\n              Try Again?\n            </button>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default PrizePot;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":["useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","useMonitorOutput","monitor","collect","onCollect","collected","updateCollected","onUpdate","setCollected","useState","useCallback","nextValue","equal","useCollector","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useCollectedProps","collector","connector","reconnect","useOptionalFactory","arg","deps","memoDeps","push","useMemo","useConnectDragSource","hooks","dragSource","useConnectDragPreview","dragPreview","shallowEqual","objA","objB","compare","compareContext","compareResult","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","isRef","obj","wrapHookToRecognizeElement","hook","elementOrNode","arguments","undefined","options","isValidElement","node","element","type","displayName","name","Error","concat","throwIfCompositeComponentElement","newRef","previousRef","ref","invariant","cloneElement","setRef","cloneWithRef","wrapConnectorHooks","wrappedHooks","forEach","endsWith","wrappedHook","current","SourceConnector","receiveHandlerId","newHandlerId","this","connectTarget","dragSourceOptions","dragSourceOptionsInternal","dragPreviewOptions","dragPreviewOptionsInternal","didChange","reconnectDragSource","reconnectDragPreview","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","dragSourceUnsubscribe","backend","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","connectDragPreview","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","clearDragSource","clearDragPreview","constructor","useDragDropManager","dragDropManager","useContext","DndContext","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","sourceId","canDrag","internalMonitor","canDragSource","isDragging","isDraggingSource","listener","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","manager","getMonitor","DragSourceImpl","beginDrag","spec","result","item","globalMonitor","target","endDrag","end","useRegisteredDragSource","handler","useDragSource","itemType","useDragType","unregister","source","registry","getRegistry","addSource","removeSource","registerSource","useDrag","specArg","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","useConnectDropTarget","dropTarget","TargetConnector","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","connectDropTarget","dropTargetOptionsInternal","dropTargetNode","dropTargetRef","clearDropTarget","isCallingCanDrop","DropTargetMonitorImpl","canDrop","isOver","DropTargetImpl","hover","drop","useRegisteredDropTarget","useDropTarget","accept","Array","isArray","useAccept","addTarget","removeTarget","registerTarget","map","a","toString","join","useDrop","useDropTargetMonitor","useDropTargetConnector","ItemTypes","DraggableCoinBag","_ref","id","drag","_jsx","style","opacity","fontSize","cursor","children","DroppableAnswerOption","_ref2","index","onDropCoinBag","allocations","_jsxs","border","borderRadius","padding","margin","textAlign","className","styles","coinBagAllocation","allocation","DroppablePrizeFund","_ref3","onReturnCoinBag","minHeight","prizeFund","_ref4","text","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","prizePot","setPrizePot","currentQuestion","celebrate","setCelebrate","coinBagsAllocation","setCoinBagsAllocation","bags","parsedQuestions","split","q","lines","question","answers","slice","answer","replace","isCorrect","includes","handleDropCoinBag","answerIndex","coinBagId","prev","newAllocations","_Fragment","interactiveTitle","instructions","celebration","buttonWrapper","restartButton","onClick","restartGame","prizeFundTitle","submitButton","disabled","every","handleSubmit","correctAnswerIndex","findIndex","betPerBag","winnings","filter","totalLostFromIncorrectBets","newPrizePot","Math","ceil","gameArea","answerOption","handleSelectOption","module","exports","b","i","RegExp","flags","valueOf"],"sourceRoot":""}