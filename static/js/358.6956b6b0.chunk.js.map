{"version":3,"file":"static/js/358.6956b6b0.chunk.js","mappings":"oLAMA,MAAMA,EAAe,UAsFrB,QApFA,SAAoBC,GAAY,IAAX,KAAEC,GAAMD,EAC3B,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAiBC,IAAsBF,EAAAA,EAAAA,WAAS,GACjDG,GAASC,EAAAA,EAAAA,QAAO,OAChB,SAAEC,EAAQ,YAAEC,IAAgBC,EAAAA,EAAAA,MAQlCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,YAAW,KACvBR,GAAmB,EAAM,GACxB,KACH,MAAO,IAAMS,aAAaF,EAAM,GAC/B,IAEH,MAAMG,EAAmBC,IACvBP,EAAYO,EAAK,EAGnB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEC,SAAU,WAAYC,QAAS,gBAAiBH,SAAA,GACzDnB,EAAKuB,SAASzB,IAAiBU,KAChCgB,EAAAA,EAAAA,KAAA,OACEC,IAAKnB,EACLoB,IAAK1B,IAASA,EAAKuB,SAASzB,GAAgBE,EAAOQ,EACnDU,UAAU,qBACVS,IAAI,WAIP3B,EAAKuB,SAASzB,KAAkBU,IAC/BS,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,+CAEHK,EAAAA,EAAAA,KAAA,SAAO,KACPA,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLV,UAAU,aACVW,OAAO,UACPC,SAAWC,IACTC,EAAAA,EAAAA,IAAsBD,EAAME,OAAOC,MAAM,GAAInB,QAMpD,IAAIoB,MAAM,KAAKC,KAAI,CAACC,EAAGC,KACtBd,EAAAA,EAAAA,KAAA,OAEEN,UAAS,aAAAqB,OACPtC,EAAcsB,SAASe,GAAS,mBAAqB,aAEvDlB,MAAO,CACLoB,MAAM,GAADD,OACHjC,EAAOmC,QAAuC,GAA7BnC,EAAOmC,QAAQC,YAAoB,OAEtDC,OAAO,GAADJ,OACJjC,EAAOmC,QAAwC,GAA9BnC,EAAOmC,QAAQG,aAAqB,OAEvDC,IAAI,GAADN,OAA6B,GAAxBO,KAAKC,MAAMT,EAAQ,GAAO,KAClCU,KAAK,GAADT,OAAMD,EAAQ,EAAK,GAAE,MAE3BW,QACEhD,EAAcsB,SAASe,GAAS,KAAO,IA7DhCA,KACZrC,EAAcsB,SAASe,IAC1BpC,GAAkBgD,GAAS,IAAIA,EAAMZ,IACvC,EA0DuDa,CAAUb,GACxDnB,SAEA,4BAA4BmB,IAlBxBA,QAsBVlC,IACCa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCK,EAAAA,EAAAA,KAAA,MAAAL,SAAI,kBACJK,EAAAA,EAAAA,KAAA,KAAAL,SAAG,+BAKb,C","sources":["components/ImageReveal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ImageReveal.css\";\n\nimport { handleImageFileChange } from \"../ImageUploads\";\nimport { useEditContext } from \"../EditContext\";\n\nconst LOCAL_MARKER = \"[local]\";\n\nfunction ImageReveal({ text }) {\n  const [revealedBoxes, setRevealedBoxes] = useState([]);\n  const [showInstruction, setShowInstruction] = useState(true);\n  const imgRef = useRef(null);\n  const { textData, setTextData } = useEditContext();\n\n  const toggleBox = (index) => {\n    if (!revealedBoxes.includes(index)) {\n      setRevealedBoxes((prev) => [...prev, index]);\n    }\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowInstruction(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const updateImageData = (data) => {\n    setTextData(data);\n  };\n\n  return (\n    <div className=\"image-reveal-container\">\n      <div style={{ position: \"relative\", display: \"inline-block\" }}>\n        {(!text.includes(LOCAL_MARKER) || textData) && (\n          <img\n            ref={imgRef}\n            src={text && !text.includes(LOCAL_MARKER) ? text : textData}\n            className=\"image-reveal-image\"\n            alt=\"Reveal\"\n          />\n        )}\n\n        {text.includes(LOCAL_MARKER) && !textData && (\n          <div>\n            The local image will need to be provided...\n            <br />{\" \"}\n            <input\n              type=\"file\"\n              className=\"fileUpload\"\n              accept=\"image/*\"\n              onChange={(event) =>\n                handleImageFileChange(event.target.files[0], updateImageData)\n              }\n            />\n          </div>\n        )}\n\n        {[...Array(25)].map((_, index) => (\n          <div\n            key={index}\n            className={`image-box ${\n              revealedBoxes.includes(index) ? \"image-box-reveal\" : \"image-box\"\n            }`}\n            style={{\n              width: `${\n                imgRef.current ? imgRef.current.clientWidth * 0.2 : \"20%\"\n              }`,\n              height: `${\n                imgRef.current ? imgRef.current.clientHeight * 0.2 : \"20%\"\n              }`,\n              top: `${Math.floor(index / 5) * 20}%`,\n              left: `${(index % 5) * 20}%`,\n            }}\n            onClick={\n              revealedBoxes.includes(index) ? null : () => toggleBox(index)\n            }\n          >\n            {\"ABCDEFGHIJKLMNOPQRSTUVWXY\"[index]}\n          </div>\n        ))}\n      </div>\n      {showInstruction && (\n        <div className=\"image-reveal-instruction\">\n          <h1>Image Reveal</h1>\n          <p>click boxes to reveal</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ImageReveal;\n"],"names":["LOCAL_MARKER","_ref","text","revealedBoxes","setRevealedBoxes","useState","showInstruction","setShowInstruction","imgRef","useRef","textData","setTextData","useEditContext","useEffect","timer","setTimeout","clearTimeout","updateImageData","data","_jsxs","className","children","style","position","display","includes","_jsx","ref","src","alt","type","accept","onChange","event","handleImageFileChange","target","files","Array","map","_","index","concat","width","current","clientWidth","height","clientHeight","top","Math","floor","left","onClick","prev","toggleBox"],"sourceRoot":""}