{"version":3,"file":"static/js/3198.140179df.chunk.js","mappings":"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","sources":["../node_modules/fast-deep-equal/index.js","../node_modules/@react-dnd/shallowequal/src/index.ts","../node_modules/react-dnd/src/hooks/useMonitorOutput.ts","../node_modules/react-dnd/src/hooks/useCollector.ts","../node_modules/react-dnd/src/hooks/useCollectedProps.ts","../node_modules/react-dnd/src/hooks/useDrag/connectors.ts","../node_modules/react-dnd/src/internals/SourceConnector.ts","../node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/DragSourceImpl.ts","../node_modules/react-dnd/src/hooks/useDrag/useRegisteredDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSource.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragType.ts","../node_modules/react-dnd/src/hooks/useDrag/useDrag.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceMonitor.ts","../node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts","../node_modules/react-dnd/src/hooks/useDragDropManager.ts","../node_modules/react-dnd/src/hooks/useDrop/connectors.ts","../node_modules/react-dnd/src/internals/TargetConnector.ts","../node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/DropTargetImpl.ts","../node_modules/react-dnd/src/hooks/useDrop/useRegisteredDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTarget.ts","../node_modules/react-dnd/src/hooks/useDrop/useAccept.ts","../node_modules/react-dnd/src/hooks/useDrop/useDrop.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetMonitor.ts","../node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts","../node_modules/react-dnd/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-dnd/src/hooks/useOptionalFactory.ts","../node_modules/react-dnd/src/internals/isRef.ts","../node_modules/react-dnd/src/internals/registration.ts","../node_modules/react-dnd/src/internals/wrapConnectorHooks.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export function shallowEqual<T>(\n\tobjA: T,\n\tobjB: T,\n\tcompare?: (a: T, b: T, key?: string) => boolean | void,\n\tcompareContext?: any,\n) {\n\tlet compareResult = compare\n\t\t? compare.call(compareContext, objA, objB)\n\t\t: void 0\n\tif (compareResult !== void 0) {\n\t\treturn !!compareResult\n\t}\n\n\tif (objA === objB) {\n\t\treturn true\n\t}\n\n\tif (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n\t\treturn false\n\t}\n\n\tconst keysA = Object.keys(objA)\n\tconst keysB = Object.keys(objB)\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false\n\t}\n\n\tconst bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)\n\n\t// Test for A's keys different from B.\n\tfor (let idx = 0; idx < keysA.length; idx++) {\n\t\tconst key = keysA[idx] as string\n\n\t\tif (!bHasOwnProperty(key)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst valueA = (objA as any)[key]\n\t\tconst valueB = (objB as any)[key]\n\n\t\tcompareResult = compare\n\t\t\t? compare.call(compareContext, valueA, valueB, key)\n\t\t\t: void 0\n\n\t\tif (\n\t\t\tcompareResult === false ||\n\t\t\t(compareResult === void 0 && valueA !== valueB)\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n}\n","import type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\nexport function useMonitorOutput<Monitor extends HandlerManager, Collected>(\n\tmonitor: Monitor & MonitorEventEmitter,\n\tcollect: (monitor: Monitor) => Collected,\n\tonCollect?: () => void,\n): Collected {\n\tconst [collected, updateCollected] = useCollector(monitor, collect, onCollect)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction subscribeToMonitorStateChange() {\n\t\t\tconst handlerId = monitor.getHandlerId()\n\t\t\tif (handlerId == null) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn monitor.subscribeToStateChange(updateCollected, {\n\t\t\t\thandlerIds: [handlerId],\n\t\t\t})\n\t\t},\n\t\t[monitor, updateCollected],\n\t)\n\n\treturn collected\n}\n","import equal from 'fast-deep-equal'\nimport { useCallback, useState } from 'react'\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\t// This needs to be a deep-equality check because some monitor-collected values\n\t\t// include XYCoord objects that may be equivalent, but do not have instance equality.\n\t\tif (!equal(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after react renders.\n\t// Note that the \"Dustbin Stress Test\" fails if this is not\n\t// done when the component updates\n\tuseIsomorphicLayoutEffect(updateCollected)\n\n\treturn [collected, updateCollected]\n}\n","import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n","import { useMemo } from 'react'\n\nimport type { SourceConnector } from '../../internals/index.js'\n\nexport function useConnectDragSource(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragSource(), [connector])\n}\n\nexport function useConnectDragPreview(connector: SourceConnector) {\n\treturn useMemo(() => connector.hooks.dragPreview(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { ReactElement, Ref, RefObject } from 'react'\n\nimport type { DragPreviewOptions, DragSourceOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tconst didChange = this.reconnectDragSource()\n\t\tthis.reconnectDragPreview(didChange)\n\t}\n\n\tprivate reconnectDragSource(): boolean {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn didChange\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn didChange\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t\treturn didChange\n\t}\n\n\tprivate reconnectDragPreview(forceDidChange = false): void {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tforceDidChange ||\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tpublic disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n","import type { SourceConnector } from '../../internals/index.js'\nimport { registerSource } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useDragSource } from './useDragSource.js'\nimport { useDragType } from './useDragType.js'\n\nexport function useRegisteredDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: SourceConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst handler = useDragSource(spec, monitor, connector)\n\tconst itemType = useDragType(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDragSource() {\n\t\t\tif (itemType != null) {\n\t\t\t\tconst [handlerId, unregister] = registerSource(\n\t\t\t\t\titemType,\n\t\t\t\t\thandler,\n\t\t\t\t\tmanager,\n\t\t\t\t)\n\t\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\t\treturn unregister\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\t[manager, monitor, connector, handler, itemType],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragSourceHookSpec } from '../types.js'\nimport { DragSourceImpl } from './DragSourceImpl.js'\n\nexport function useDragSource<O, R, P>(\n\tspec: DragSourceHookSpec<O, R, P>,\n\tmonitor: DragSourceMonitor<O, R>,\n\tconnector: Connector,\n) {\n\tconst handler = useMemo(\n\t\t() => new DragSourceImpl(spec, monitor, connector),\n\t\t[monitor, connector],\n\t)\n\tuseEffect(() => {\n\t\thandler.spec = spec\n\t}, [spec])\n\treturn handler\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n","import { invariant } from '@react-dnd/invariant'\n\nimport type {\n\tConnectDragPreview,\n\tConnectDragSource,\n} from '../../types/index.js'\nimport type { DragSourceHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js'\nimport { useDragSourceConnector } from './useDragSourceConnector.js'\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js'\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js'\n\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrag<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDragSourceHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDragSource, ConnectDragPreview] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tinvariant(\n\t\t!(spec as any).begin,\n\t\t`useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`,\n\t)\n\n\tconst monitor = useDragSourceMonitor<DragObject, DropResult>()\n\tconst connector = useDragSourceConnector(spec.options, spec.previewOptions)\n\tuseRegisteredDragSource(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDragSource(connector),\n\t\tuseConnectDragPreview(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DragSourceMonitorImpl } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDragSourceMonitor<O, R>(): DragSourceMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo<DragSourceMonitor<O, R>>(\n\t\t() => new DragSourceMonitorImpl(manager),\n\t\t[manager],\n\t)\n}\n","import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n","import { useMemo } from 'react'\n\nimport type { TargetConnector } from '../../internals/index.js'\n\nexport function useConnectDropTarget(connector: TargetConnector) {\n\treturn useMemo(() => connector.hooks.dropTarget(), [connector])\n}\n","import { shallowEqual } from '@react-dnd/shallowequal'\nimport type { Backend, Identifier, Unsubscribe } from 'dnd-core'\nimport type { RefObject } from 'react'\n\nimport type { DropTargetOptions } from '../types/index.js'\nimport { isRef } from './isRef.js'\nimport type { Connector } from './SourceConnector.js'\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: DropTargetOptions) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: DropTargetOptions | null = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: DropTargetOptions | null = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): DropTargetOptions {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: DropTargetOptions) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tpublic disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n","import type { DropTarget } from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\n\nexport class DropTargetImpl<O, R, P> implements DropTarget {\n\tpublic constructor(\n\t\tpublic spec: DropTargetHookSpec<O, R, P>,\n\t\tprivate monitor: DropTargetMonitor<O, R>,\n\t) {}\n\n\tpublic canDrop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\treturn spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true\n\t}\n\n\tpublic hover() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.hover) {\n\t\t\tspec.hover(monitor.getItem(), monitor)\n\t\t}\n\t}\n\n\tpublic drop() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (spec.drop) {\n\t\t\treturn spec.drop(monitor.getItem(), monitor)\n\t\t}\n\t\treturn\n\t}\n}\n","import type { TargetConnector } from '../../internals/index.js'\nimport { registerTarget } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\nimport { useAccept } from './useAccept.js'\nimport { useDropTarget } from './useDropTarget.js'\n\nexport function useRegisteredDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n\tconnector: TargetConnector,\n): void {\n\tconst manager = useDragDropManager()\n\tconst dropTarget = useDropTarget(spec, monitor)\n\tconst accept = useAccept(spec)\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerDropTarget() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\taccept,\n\t\t\t\tdropTarget,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[\n\t\t\tmanager,\n\t\t\tmonitor,\n\t\t\tdropTarget,\n\t\t\tconnector,\n\t\t\taccept.map((a) => a.toString()).join('|'),\n\t\t],\n\t)\n}\n","import { useEffect, useMemo } from 'react'\n\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport type { DropTargetHookSpec } from '../types.js'\nimport { DropTargetImpl } from './DropTargetImpl.js'\n\nexport function useDropTarget<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n\tmonitor: DropTargetMonitor<O, R>,\n) {\n\tconst dropTarget = useMemo(() => new DropTargetImpl(spec, monitor), [monitor])\n\tuseEffect(() => {\n\t\tdropTarget.spec = spec\n\t}, [spec])\n\treturn dropTarget\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DropTargetHookSpec } from '../types.js'\n\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */\nexport function useAccept<O, R, P>(\n\tspec: DropTargetHookSpec<O, R, P>,\n): Identifier[] {\n\tconst { accept } = spec\n\treturn useMemo(() => {\n\t\tinvariant(spec.accept != null, 'accept must be defined')\n\t\treturn Array.isArray(accept) ? accept : [accept]\n\t}, [accept])\n}\n","import type { ConnectDropTarget } from '../../types/index.js'\nimport type { DropTargetHookSpec, FactoryOrInstance } from '../types.js'\nimport { useCollectedProps } from '../useCollectedProps.js'\nimport { useOptionalFactory } from '../useOptionalFactory.js'\nimport { useConnectDropTarget } from './connectors.js'\nimport { useDropTargetConnector } from './useDropTargetConnector.js'\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js'\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js'\n\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */\nexport function useDrop<\n\tDragObject = unknown,\n\tDropResult = unknown,\n\tCollectedProps = unknown,\n>(\n\tspecArg: FactoryOrInstance<\n\t\tDropTargetHookSpec<DragObject, DropResult, CollectedProps>\n\t>,\n\tdeps?: unknown[],\n): [CollectedProps, ConnectDropTarget] {\n\tconst spec = useOptionalFactory(specArg, deps)\n\tconst monitor = useDropTargetMonitor<DragObject, DropResult>()\n\tconst connector = useDropTargetConnector(spec.options)\n\tuseRegisteredDropTarget(spec, monitor, connector)\n\n\treturn [\n\t\tuseCollectedProps(spec.collect, monitor, connector),\n\t\tuseConnectDropTarget(connector),\n\t]\n}\n","import { useMemo } from 'react'\n\nimport { DropTargetMonitorImpl } from '../../internals/index.js'\nimport type { DropTargetMonitor } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\n\nexport function useDropTargetMonitor<O, R>(): DropTargetMonitor<O, R> {\n\tconst manager = useDragDropManager()\n\treturn useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n}\n","import { useMemo } from 'react'\n\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect =\n\ttypeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useMemo } from 'react'\n\nimport type { FactoryOrInstance } from './types.js'\n\nexport function useOptionalFactory<T>(\n\targ: FactoryOrInstance<T>,\n\tdeps?: unknown[],\n): T {\n\tconst memoDeps = [...(deps || [])]\n\tif (deps == null && typeof arg !== 'function') {\n\t\tmemoDeps.push(arg)\n\t}\n\treturn useMemo<T>(() => {\n\t\treturn typeof arg === 'function' ? (arg as () => T)() : (arg as T)\n\t}, memoDeps)\n}\n","export interface Ref<T> {\n\tcurrent: T\n}\n\nexport function isRef(obj: unknown): boolean {\n\treturn (\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tobj !== null &&\n\t\ttypeof obj === 'object' &&\n\t\tObject.prototype.hasOwnProperty.call(obj, 'current')\n\t)\n}\n","import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n","import { invariant } from '@react-dnd/invariant'\nimport type { ReactElement } from 'react'\nimport { cloneElement, isValidElement } from 'react'\n\nfunction throwIfCompositeComponentElement(element: ReactElement<any>) {\n\t// Custom components can no longer be wrapped directly in React DnD 2.0\n\t// so that we don't need to depend on findDOMNode() from react-dom.\n\tif (typeof element.type === 'string') {\n\t\treturn\n\t}\n\n\tconst displayName =\n\t\t(element.type as any).displayName || element.type.name || 'the component'\n\n\tthrow new Error(\n\t\t'Only native element nodes can now be passed to React DnD connectors.' +\n\t\t\t`You can either wrap ${displayName} into a <div>, or turn it into a ` +\n\t\t\t'drag source or a drop target itself.',\n\t)\n}\n\nfunction wrapHookToRecognizeElement(hook: (node: any, options: any) => void) {\n\treturn (elementOrNode = null, options = null) => {\n\t\t// When passed a node, call the hook straight away.\n\t\tif (!isValidElement(elementOrNode)) {\n\t\t\tconst node = elementOrNode\n\t\t\thook(node, options)\n\t\t\t// return the node so it can be chained (e.g. when within callback refs\n\t\t\t// <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\t\t\treturn node\n\t\t}\n\n\t\t// If passed a ReactElement, clone it and attach this function as a ref.\n\t\t// This helps us achieve a neat API where user doesn't even know that refs\n\t\t// are being used under the hood.\n\t\tconst element: ReactElement | null = elementOrNode\n\t\tthrowIfCompositeComponentElement(element as any)\n\n\t\t// When no options are passed, use the hook directly\n\t\tconst ref = options ? (node: Element) => hook(node, options) : hook\n\t\treturn cloneWithRef(element, ref)\n\t}\n}\n\nexport function wrapConnectorHooks(hooks: any) {\n\tconst wrappedHooks: any = {}\n\n\tObject.keys(hooks).forEach((key) => {\n\t\tconst hook = hooks[key]\n\n\t\t// ref objects should be passed straight through without wrapping\n\t\tif (key.endsWith('Ref')) {\n\t\t\twrappedHooks[key] = hooks[key]\n\t\t} else {\n\t\t\tconst wrappedHook = wrapHookToRecognizeElement(hook)\n\t\t\twrappedHooks[key] = () => wrappedHook\n\t\t}\n\t})\n\n\treturn wrappedHooks\n}\n\nfunction setRef(ref: any, node: any) {\n\tif (typeof ref === 'function') {\n\t\tref(node)\n\t} else {\n\t\tref.current = node\n\t}\n}\n\nfunction cloneWithRef(element: any, newRef: any): ReactElement<any> {\n\tconst previousRef = element.ref\n\tinvariant(\n\t\ttypeof previousRef !== 'string',\n\t\t'Cannot connect React DnD to an element with an existing string ref. ' +\n\t\t\t'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n\t\t\t'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs',\n\t)\n\n\tif (!previousRef) {\n\t\t// When there is no ref on the element, use the new ref directly\n\t\treturn cloneElement(element, {\n\t\t\tref: newRef,\n\t\t})\n\t} else {\n\t\treturn cloneElement(element, {\n\t\t\tref: (node: any) => {\n\t\t\t\tsetRef(previousRef, node)\n\t\t\t\tsetRef(newRef, node)\n\t\t\t},\n\t\t})\n\t}\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","shallowEqual","objA","objB","compare","compareContext","compareResult","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","useMonitorOutput","monitor","collect","onCollect","collected","updateCollected","onUpdate","setCollected","useState","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useCollectedProps","collector","connector","reconnect","useConnectDragSource","useMemo","hooks","dragSource","useConnectDragPreview","dragPreview","SourceConnector","receiveHandlerId","newHandlerId","this","connectTarget","dragSourceOptions","dragSourceOptionsInternal","options","dragPreviewOptions","dragPreviewOptionsInternal","didChange","reconnectDragSource","reconnectDragPreview","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","dragSourceUnsubscribe","backend","connectDragSource","forceDidChange","arguments","undefined","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","connectDragPreview","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","current","clearDragSource","clearDragPreview","wrapConnectorHooks","node","isRef","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","sourceId","canDrag","invariant","internalMonitor","canDragSource","isDragging","isDraggingSource","listener","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","manager","getMonitor","DragSourceImpl","beginDrag","spec","result","item","globalMonitor","target","endDrag","end","useRegisteredDragSource","useDragDropManager","handler","useEffect","useDragSource","itemType","type","useDragType","unregister","registerSource","useDrag","specArg","deps","useOptionalFactory","begin","useDragSourceMonitor","getBackend","useDragSourceConnector","previewOptions","dragDropManager","useContext","DndContext","useConnectDropTarget","dropTarget","TargetConnector","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","connectDropTarget","dropTargetOptionsInternal","dropTargetNode","dropTargetRef","clearDropTarget","isCallingCanDrop","DropTargetMonitorImpl","canDrop","isOver","DropTargetImpl","hover","drop","useRegisteredDropTarget","useDropTarget","accept","useAccept","registerTarget","map","join","useDrop","useDropTargetMonitor","useDropTargetConnector","window","useLayoutEffect","arg","memoDeps","push","obj","registry","getRegistry","addTarget","removeTarget","addSource","removeSource","wrapHookToRecognizeElement","hook","elementOrNode","isValidElement","element","displayName","name","Error","concat","throwIfCompositeComponentElement","newRef","previousRef","ref","cloneElement","setRef","cloneWithRef","wrappedHooks","forEach","endsWith","wrappedHook"],"sourceRoot":""}